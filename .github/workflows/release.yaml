name: Package and release

on:
  release:
    types: [published]

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install the project dependencies
      run: poetry install

    - name: Build
      run: |
        poetry build

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*
        if-no-files-found: error

  release:
    needs: [package]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: ./dist
    - name: Install Twine
      run: python -m pip install twine
    - name: Release to PyPI
      run: python -m twine upload dist/*
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.TWINE_API_TOKEN }}
